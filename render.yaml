services:
  - type: web
    name: face-recognition
    env: python
    plan: free
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: POETRY_VIRTUALENVS_CREATE
        value: "false"
      - key: POETRY_NO_INTERACTION
        value: "1"
      - key: DISABLE_OPENCV_PARALLEL_BUILD
        value: "1"
    buildCommand: |
      # Install only essential system dependencies
      apt-get update
      apt-get install -y --no-install-recommends \
        build-essential \
        libgl1-mesa-glx \
        libglib2.0-0 \
        curl
      apt-get clean
      rm -rf /var/lib/apt/lists/*

      # Set environment variables for minimal memory usage
      export CFLAGS="-Os"
      export CXXFLAGS="-Os"
      export CMAKE_BUILD_PARALLEL_LEVEL=1
      export MAKEFLAGS="-j1"
      export FACE_RECOGNITION_DISABLE_GPU=1
      export POETRY_HOME=/opt/poetry
      
      # Install poetry
      curl -sSL https://install.python-poetry.org | python3 -
      export PATH="/opt/poetry/bin:$PATH"
      
      # Install dependencies with poetry (no dev dependencies)
      poetry install --without dev --no-ansi --no-cache
      
      # Clean up
      rm -rf ~/.cache
      rm -rf /tmp/*
      
      # Final cleanup
      pip cache purge
      rm -rf ~/.cache/pip
      rm -rf /tmp/*
      
    startCommand: |
      cd backend && gunicorn --config gunicorn_config.py app:app
    envVars:
      - key: PYTHON_VERSION
        value: "3.13"
      - key: MONGODB_URI
        sync: false
      - key: DB_NAME
        value: face_recognition
      - key: FLASK_ENV
        value: production
      - key: CMAKE_BUILD_PARALLEL_LEVEL
        value: "1"
      - key: MAKEFLAGS
        value: "-j1"
      - key: PIP_NO_CACHE_DIR
        value: "true"
      - key: CFLAGS
        value: "-O2"
    healthCheckPath: /health
    healthCheckPath: /health
    autoDeploy: true
