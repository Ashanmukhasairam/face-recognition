services:
  - type: web
    name: face-recognition
    env: python
    plan: free
    buildCommand: |
      # Install system dependencies
      apt-get update && apt-get install -y \
        build-essential \
        cmake \
        libgl1-mesa-dev \
        libglib2.0-0 \
        libsm6 \
        libxext6
      
      # Clear pip cache and upgrade basic tools
      pip cache purge
      pip install --no-cache-dir --upgrade pip setuptools wheel

      # Install basic dependencies first
      pip install --no-cache-dir Flask>=2.3.0 Werkzeug>=2.3.0 gunicorn>=21.0.0 python-dotenv>=1.0.0 pymongo[srv]>=4.5.0
      
      # Install numpy and Pillow first as they're required by other packages
      pip install --no-cache-dir numpy>=1.24.0 Pillow>=10.0.0
      
      # Install pandas separately as it's large
      pip install --no-cache-dir pandas>=2.0.0
      
      # Install OpenCV headless to save memory
      pip install --no-cache-dir opencv-python-headless>=4.8.0
      
      # Clean up before dlib installation
      apt-get clean
      rm -rf /var/lib/apt/lists/*
      
      # Install dlib and face-recognition last, with limited parallel builds
      export CMAKE_BUILD_PARALLEL_LEVEL=1
      pip install --no-cache-dir dlib>=19.24.0
      pip install --no-cache-dir face-recognition>=1.3.0
      
      # Final cleanup
      pip cache purge
      rm -rf ~/.cache/pip
    startCommand: |
      cd backend && gunicorn --config gunicorn_config.py app:app
    envVars:
      - key: PYTHON_VERSION
        value: "3.13"
      - key: MONGODB_URI
        sync: false
      - key: DB_NAME
        value: face_recognition
      - key: FLASK_ENV
        value: production
      - key: CMAKE_BUILD_PARALLEL_LEVEL  # Limit parallel builds globally
        value: "1"
    healthCheckPath: /health
    healthCheckPath: /health
    autoDeploy: true
